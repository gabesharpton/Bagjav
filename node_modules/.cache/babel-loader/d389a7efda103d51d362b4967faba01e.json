{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/Bagjav/bagjav/src/Cards.js\";\nimport React, { Component } from 'react';\nimport './card.css'; //import {_} from 'lodash'\n\nimport Deck from './components/Deck';\nexport default class Cards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeCards = () => {\n      const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n      const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\n\n      for (let suit in suits) {\n        for (let value in values) {\n          this.state.deck.push(React.createElement(\"span\", {\n            className: \"cards\",\n            key: value + suit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, values[value])); //change span to Deck\n        }\n      } // this.shuffle();\n\n\n      return this.deck;\n    };\n\n    this.shuffle = () => {\n      const deck = this.state.deck;\n      let j = deck.length,\n          i;\n\n      while (j) {\n        i = Math.floor(Math.random() * j--);\n        var _ref = [deck[i], deck[j]];\n        deck[j] = _ref[0];\n        deck[i] = _ref[1];\n      } //this.deal();\n\n\n      return this;\n    };\n\n    this.deal = () => {\n      this.setState({\n        player1: this.state.deck.filter((cards, index) => {\n          return index < 13 ? cards : null;\n        })\n      });\n      this.setState({\n        player2: this.state.deck.filter((cards, index) => {\n          return index >= 13 && index < 26 ? cards : null;\n        })\n      });\n      this.setState({\n        player3: this.state.deck.filter((cards, index) => {\n          return index >= 26 && index < 39 ? cards : null;\n        })\n      });\n      this.setState({\n        player4: this.state.deck.filter((cards, index) => {\n          return index >= 39 && index <= 52 ? cards : null;\n        })\n      });\n    };\n\n    this.player2turn = e => {\n      // let player2 = [...this.state.player2];\n      //e.preventDefault();\n      let player2 = this.state.player2; // let {playCard} = this.state\n      // let player2child = [...this.state.player2['0'].props.children]\n      //let playCardChild = [...this.state.playCard['0'].props.children]\n\n      let filtered = player2.filter(function (card) {\n        return value === e;\n      });\n      this.setState({\n        playCard: [...filtered]\n      });\n      console.log(filtered);\n      {// while(player2['0'].props.children !== i){\n        // }\n        // for(let item = 0; item < player2.length; item++){\n        //     console.log(playCard)\n        //     console.log(player2)\n        //     this.items = [...this.state.player2[item].props.children]\n        //     console.log(this.items)\n        //     return this.items;\n        // }\n        // for(let i = 0; i < player2.length; i++){\n        //     // for(let c = 0; c < playCard.length; c++){\n        //         let player2child = [...this.state.player2[i].props.children]\n        //         // console.log(player2child)\n        //         let playCardChild = [...this.state.playCard['0'].props.children]\n        //         // console.log(playCardChild)\n        //         if(player2child === playCardChild){\n        //             console.log(player2child)\n        //             console.log(playCardChild)\n        //             this.setState(({playCard, player2}) => {\n        //                 return {\n        //                     playCard: [...playCard, ...player2.slice(0, 1)],\n        //                     player2: [...player2.slice(1, player2.length)]\n        //                 };\n        //             });\n        //             return this.setState(({playCard, player2}) => {\n        //                 return {\n        //                     playCard: [...playCard, ...player2.slice(0, 1)],\n        //                     player2: [...player2.slice(1, player2.length)]\n        //                 };\n        //             });\n        //         }\n        //     }\n      }\n    };\n\n    this.player3turn = () => {\n      this.setState(({\n        playCard,\n        player3\n      }) => {\n        return {\n          playCard: [...playCard, ...player3.slice(0, 1)],\n          player3: [...player3.slice(1, player3.length)]\n        };\n      });\n    };\n\n    this.player4turn = () => {\n      this.setState(({\n        playCard,\n        player4\n      }) => {\n        return {\n          playCard: [...playCard, ...player4.slice(0, 1)],\n          player4: [...player4.slice(1, player4.length)]\n        };\n      });\n    };\n\n    this.state = {\n      deck: [],\n      player1: [],\n      player2: [],\n      player3: [],\n      player4: [],\n      playCard: []\n    }; //this.startGame();\n\n    this.makeCards();\n    this.shuffle(); // this.checkCard();\n  }\n\n  choseCard() {\n    this.setState(({\n      playCard,\n      player1\n    }) => {\n      return {\n        playCard: [...playCard, ...player1.slice(0, 1)],\n        player1: [...player1.slice(1, player1.length)]\n      };\n    });\n  }\n\n  render() {\n    // console.log( this.state.player1 )\n    // console.log( this.state.player2 )\n    // console.log( this.state.player3 )\n    // console.log( this.state.player4 )\n    // console.log(this.state.playCard)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Deck, {\n      deck: this.state.deck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      id: \"player1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.player1), React.createElement(\"p\", {\n      id: \"player2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.player2), React.createElement(\"p\", {\n      id: \"player3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.player3), React.createElement(\"p\", {\n      id: \"player4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.state.player4), React.createElement(\"button\", {\n      onClick: () => this.deal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Deal\"), React.createElement(\"button\", {\n      onClick: () => this.choseCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Player 1\"), React.createElement(\"button\", {\n      onClick: () => this.player2turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Player 2\"), React.createElement(\"button\", {\n      onClick: () => this.player3turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Player 3\"), React.createElement(\"button\", {\n      onClick: () => this.player4turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Player 4\"), React.createElement(\"p\", {\n      id: \"playcard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.playCard, \" is the play card\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.playCard.length));\n  }\n\n} // --------------------------------------------------------------\n// this.setState({playCard: this.state.player2.filter((card,index ) => {\n//     return index === this.state.playCard[0].props.children ? card : null\n// })})","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Cards.js"],"names":["React","Component","Deck","Cards","constructor","props","makeCards","suits","values","suit","value","state","deck","push","shuffle","j","length","i","Math","floor","random","deal","setState","player1","filter","cards","index","player2","player3","player4","player2turn","e","filtered","card","playCard","console","log","player3turn","slice","player4turn","choseCard","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './card.css'\n//import {_} from 'lodash'\nimport Deck from './components/Deck'\n\nexport default class Cards extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            deck: [],\n            player1: [],\n            player2: [],\n            player3: [],\n            player4: [],\n            playCard: [],\n            \n        }\n        //this.startGame();\n        this.makeCards(); \n        this.shuffle();\n        \n        // this.checkCard();\n    }\n\n    makeCards = () => {\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K']\n\n        \n        for (let suit in suits){\n            for (let value in values) {\n                this.state.deck.push(<span className='cards' key={value+suit}>{values[value]}</span>);\n                //change span to Deck\n            }\n        }\n        // this.shuffle();\n        return this.deck\n    }\n\n    shuffle = () => {\n            const {deck} = this.state;\n            let j = deck.length, i;\n            \n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n                // console.log([deck[i], deck[j]])\n            }\n            //this.deal();\n            return this;\n    }\n    deal = () => {\n            this.setState({ player1: this.state.deck.filter((cards, index) => {\n                \n                    return index < 13 ? cards : null\n                }) \n            }) \n            this.setState({ player2: this.state.deck.filter((cards, index) => {\n                    return index >= 13 && index < 26 ? cards : null\n                }) \n            }) \n            this.setState({ player3: this.state.deck.filter((cards, index) => {\n                    return index >= 26 && index < 39 ? cards : null\n                }) \n            }) \n            this.setState({ player4: this.state.deck.filter((cards, index) => {\n                    return index >= 39 && index <= 52 ? cards : null\n                }) \n            }) \n    }\n    \n\nchoseCard(){\n    this.setState(({playCard, player1}) => {\n        return {\n            playCard: [...playCard, ...player1.slice(0, 1)],\n            player1: [...player1.slice(1, player1.length)]\n        \n        };\n      });\n    \n}\nplayer2turn = (e) => {\n    // let player2 = [...this.state.player2];\n    //e.preventDefault();\n    let {player2} = this.state\n    // let {playCard} = this.state\n    // let player2child = [...this.state.player2['0'].props.children]\n    //let playCardChild = [...this.state.playCard['0'].props.children]\nlet filtered = player2.filter(function(card){\n    return value === e\n});\nthis.setState({\n    playCard: [...filtered]\n})\nconsole.log(filtered)\n{\n    // while(player2['0'].props.children !== i){\n\n    // }\n\n    \n    // for(let item = 0; item < player2.length; item++){\n    //     console.log(playCard)\n    //     console.log(player2)\n    //     this.items = [...this.state.player2[item].props.children]\n        \n    //     console.log(this.items)\n    //     return this.items;\n    // }\n    \n    \n    // for(let i = 0; i < player2.length; i++){\n    //     // for(let c = 0; c < playCard.length; c++){\n    //         let player2child = [...this.state.player2[i].props.children]\n    //         // console.log(player2child)\n    //         let playCardChild = [...this.state.playCard['0'].props.children]\n    //         // console.log(playCardChild)\n    //         if(player2child === playCardChild){\n    //             console.log(player2child)\n    //             console.log(playCardChild)\n    //             this.setState(({playCard, player2}) => {\n    //                 return {\n    //                     playCard: [...playCard, ...player2.slice(0, 1)],\n    //                     player2: [...player2.slice(1, player2.length)]\n                        \n    //                 };\n    //             });\n    //             return this.setState(({playCard, player2}) => {\n    //                 return {\n    //                     playCard: [...playCard, ...player2.slice(0, 1)],\n    //                     player2: [...player2.slice(1, player2.length)]\n                        \n    //                 };\n    //             });\n    //         }\n            \n    //     }\n}\n    }\nplayer3turn = () => {\n    this.setState(({playCard, player3}) => {\n        return {\n            playCard: [...playCard, ...player3.slice(0, 1)],\n            player3: [...player3.slice(1, player3.length)]\n        \n        };\n      });\n}\nplayer4turn = () => {\n    this.setState(({playCard, player4}) => {\n        return {\n            playCard: [...playCard, ...player4.slice(0, 1)],\n            player4: [...player4.slice(1, player4.length)]\n        \n        };\n      });\n}\n\n\n\n        render(){\n            // console.log( this.state.player1 )\n            // console.log( this.state.player2 )\n            // console.log( this.state.player3 )\n            // console.log( this.state.player4 )\n            // console.log(this.state.playCard)\n            \n            return(\n                <div>\n            <div>\n                <Deck deck={this.state.deck} />\n            </div>\n                <p id='player1'>{this.state.player1}</p>\n                <p id='player2'>{this.state.player2}</p>\n                <p id='player3'>{this.state.player3}</p>\n                <p id='player4'>{this.state.player4}</p>\n                <button onClick={() => this.deal()} >Deal</button>\n                <button onClick={() => this.choseCard()} >Player 1</button>\n                <button onClick={() => this.player2turn()} >Player 2</button>\n                <button onClick={() => this.player3turn()} >Player 3</button>\n                <button onClick={() => this.player4turn()} >Player 4</button>\n                \n                <p id='playcard'>{this.state.playCard} is the play card</p>\n                <p>{this.state.playCard.length}</p>\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n\n\n\n   // --------------------------------------------------------------\n\n\n\n        // this.setState({playCard: this.state.player2.filter((card,index ) => {\n        //     return index === this.state.playCard[0].props.children ? card : null\n        // })})"]},"metadata":{},"sourceType":"module"}