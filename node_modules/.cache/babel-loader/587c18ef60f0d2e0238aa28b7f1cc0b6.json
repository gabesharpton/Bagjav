{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/Bagjav/bagjav/src/Cards.js\";\nimport React, { Component } from 'react';\nimport './card.css'; //import Deck from './components/Deck'\n\nexport default class Cards extends Component {\n  constructor() {\n    super();\n\n    this.makeCards = () => {\n      const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n      const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King'];\n\n      for (let suit in suits) {\n        for (let value in values) {\n          this.state.deck.push(React.createElement(\"span\", {\n            className: \"cards\",\n            key: value + suit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"\".concat(values[value], \" of \").concat(suits[suit]))); //change span to Deck\n        }\n      } // this.shuffle();\n\n\n      return this.deck;\n    };\n\n    this.shuffle = () => {\n      const deck = this.state.deck;\n      let j = deck.length,\n          i;\n\n      while (j) {\n        i = Math.floor(Math.random() * j--);\n        var _ref = [deck[i], deck[j]];\n        deck[j] = _ref[0];\n        deck[i] = _ref[1];\n      } //this.deal();\n\n\n      return this;\n    };\n\n    this.deal = () => {\n      this.setState({\n        player1: this.state.deck.filter((cards, index) => {\n          return index < 13 ? cards : null;\n        }).sort()\n      });\n      this.state.player1.sort();\n      this.setState({\n        player2: this.state.deck.filter((cards, index) => {\n          return index >= 13 && index < 26 ? cards : null;\n        })\n      });\n      this.setState({\n        player3: this.state.deck.filter((cards, index) => {\n          return index >= 26 && index < 39 ? cards : null;\n        })\n      });\n      this.setState({\n        player4: this.state.deck.filter((cards, index) => {\n          return index >= 39 && index <= 52 ? cards : null;\n        })\n      });\n    };\n\n    this.sort = () => {\n      //let sorted = (a,b) => a.props.children - b.props.children;\n      this.setState({\n        player1: this.state.player1.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player2: this.state.player2.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player3: this.state.player3.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player4: this.state.player4.sort((a, b) => a.key - b.key)\n      });\n    };\n\n    this.choseCard = () => {\n      this.setState(({\n        playCard,\n        player1\n      }) => {\n        return {\n          playCard: [...playCard, ...player1.slice(0, 1)],\n          player1: [...player1.slice(1, player1.length)]\n        };\n      });\n    };\n\n    this.player2turn = () => {\n      let player2 = this.state.player2;\n      let playCard = this.state.playCard;\n      let filtered = player2.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children === cards.props.children;\n        });\n      });\n      let newPlayer2 = player2.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children[0] !== cards.props.children[0];\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player2: [...newPlayer2]\n      }); //console.log(filtered)\n    };\n\n    this.player3turn = () => {\n      let player3 = this.state.player3;\n      let playCard = this.state.playCard;\n      let filtered = player3.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children === cards.props.children;\n        });\n      });\n      let newPlayer3 = player3.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children !== cards.props.children;\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player3: [...newPlayer3]\n      });\n    };\n\n    this.player4turn = () => {\n      let player4 = this.state.player4;\n      let playCard = this.state.playCard;\n      let filtered = player4.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children === cards.props.children;\n        });\n      });\n      let newPlayer4 = player4.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children !== cards.props.children;\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player4: [...newPlayer4]\n      });\n    };\n\n    this.playGame = e => {\n      if (this.state.playCard.length < 4) {\n        this.playGame();\n        this.player2turn();\n        this.player3turn();\n        this.player4turn();\n      }\n    };\n\n    this.state = {\n      deck: [],\n      player1: [],\n      player2: [],\n      player3: [],\n      player4: [],\n      playCard: []\n    }; //this.startGame();\n\n    this.makeCards();\n    this.shuffle(); // this.checkCard();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"player1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.player1), React.createElement(\"p\", {\n      id: \"player2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.player2), React.createElement(\"p\", {\n      id: \"player3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.player3), React.createElement(\"p\", {\n      id: \"player4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.player4), React.createElement(\"button\", {\n      onClick: () => this.deal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Deal\"), React.createElement(\"button\", {\n      onClick: () => this.sort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"sort\"), React.createElement(\"button\", {\n      onClick: () => this.choseCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Player 1\"), React.createElement(\"button\", {\n      onClick: () => this.player2turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Player 2\"), React.createElement(\"button\", {\n      onClick: () => this.player3turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Player 3\"), React.createElement(\"button\", {\n      onClick: () => this.player4turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Player 4\"), React.createElement(\"p\", {\n      id: \"playcard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.playCard, \" is the play card\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.playCard.length));\n  }\n\n} // --------------------------------------------------------------\n// this.setState({playCard: this.state.player2.filter((card,index ) => {\n//     return index === this.state.playCard[0].props.children ? card : null\n// })})","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Cards.js"],"names":["React","Component","Cards","constructor","makeCards","suits","values","suit","value","state","deck","push","shuffle","j","length","i","Math","floor","random","deal","setState","player1","filter","cards","index","sort","player2","player3","player4","a","b","key","choseCard","playCard","slice","player2turn","filtered","some","card","props","children","newPlayer2","player3turn","newPlayer3","player4turn","newPlayer4","playGame","e","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './card.css'\n//import Deck from './components/Deck'\n\nexport default class Cards extends Component{\n    constructor(){\n        super();\n        this.state = {\n            deck: [],\n            player1: [],\n            player2: [],\n            player3: [],\n            player4: [],\n            playCard: [],\n            \n        }\n        //this.startGame();\n        this.makeCards(); \n        this.shuffle();\n        \n        // this.checkCard();\n    }\n\n    makeCards = () => {\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']\n\n        \n        for (let suit in suits){\n            for (let value in values) {\n                this.state.deck.push(<span className='cards' key={value+suit}>{`${values[value]} of ${suits[suit]}`}</span>);\n                //change span to Deck\n            }\n        }\n        // this.shuffle();\n        return this.deck\n    }\n\n    shuffle = () => {\n            const {deck} = this.state;\n            let j = deck.length, i;\n            \n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n                // console.log([deck[i], deck[j]])\n            }\n            //this.deal();\n            return this;\n    }\n    deal = () => {\n            this.setState({ player1: this.state.deck.filter((cards, index) => {\n                \n                    return index < 13 ? cards : null\n                }).sort() \n            }) \n            this.state.player1.sort();\n            this.setState({ player2: this.state.deck.filter((cards, index) => {\n                    return index >= 13 && index < 26 ? cards : null\n                }) \n            }) \n            this.setState({ player3: this.state.deck.filter((cards, index) => {\n                    return index >= 26 && index < 39 ? cards : null\n                }) \n            }) \n            this.setState({ player4: this.state.deck.filter((cards, index) => {\n                    return index >= 39 && index <= 52 ? cards : null\n                }) \n            }) \n    }\n    \n    sort = () => {\n        \n        //let sorted = (a,b) => a.props.children - b.props.children;\n        this.setState({player1: this.state.player1.sort((a,b) => a.key - b.key)}\n            );\n        this.setState({player2: this.state.player2.sort((a,b)=> a.key - b.key)}\n            );\n        this.setState({player3: this.state.player3.sort((a,b) => a.key - b.key)}\n            );\n        this.setState({player4: this.state.player4.sort((a,b) => a.key - b.key)}\n            );\n                };\n            \n    \n            choseCard = () => {\n                this.setState(({playCard, player1}) => {\n                    return {\n                        playCard: [...playCard, ...player1.slice(0, 1)],\n                        player1: [...player1.slice(1, player1.length)]\n                    \n                    };\n                });\n                \n            }\n           player2turn = () => {\n                let {player2} = this.state\n                let {playCard} = this.state\n            let filtered = player2.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer2 = player2.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children[0] !== cards.props.children[0]})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player2: [...newPlayer2]\n            })\n            //console.log(filtered)\n\n                }\n           player3turn = () => {\n                let {player3} = this.state\n                let {playCard} = this.state\n            let filtered = player3.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer3 = player3.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player3: [...newPlayer3]\n            })\n            }\n           player4turn = () => {\n                let {player4} = this.state\n                let {playCard} = this.state\n            let filtered = player4.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer4 = player4.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player4: [...newPlayer4]\n            })\n            }\nplayGame = (e) => {\n            if(this.state.playCard.length < 4){\n                this.playGame()\n                this.player2turn()\n                this.player3turn()\n                this.player4turn()\n        }\n    }\n    render(){\n            \n            return(\n                <div>\n            \n                \n            \n                <p id='player1'>{this.state.player1}</p>\n                <p id='player2'>{this.state.player2}</p>\n                <p id='player3'>{this.state.player3}</p>\n                <p id='player4'>{this.state.player4}</p>\n                <button onClick={() => this.deal()} >Deal</button>\n                <button onClick={() => this.sort()} >sort</button>\n                <button onClick={() => this.choseCard()} >Player 1</button>\n                <button onClick={() => this.player2turn()} >Player 2</button>\n                <button onClick={() => this.player3turn()} >Player 3</button>\n                <button onClick={() => this.player4turn()} >Player 4</button>\n                \n                <p id='playcard'>{this.state.playCard} is the play card</p>\n                <p>{this.state.playCard.length}</p>\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n\n\n\n   // --------------------------------------------------------------\n\n\n\n        // this.setState({playCard: this.state.player2.filter((card,index ) => {\n        //     return index === this.state.playCard[0].props.children ? card : null\n        // })})"]},"metadata":{},"sourceType":"module"}