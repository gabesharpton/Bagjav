{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/Bagjav/bagjav/src/Cards.js\";\nimport React, { Component } from 'react';\nimport './card.css'; //import Deck from './components/Deck'\n\nexport default class Cards extends Component {\n  constructor() {\n    super();\n\n    this.makeCards = () => {\n      const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n      const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']; //use regular foor loop and use i, then use i for click event\n      //make variable index and push it into new array with each card\n\n      for (let suit in suits) {\n        for (let value in values) {\n          this.state.deck.push(React.createElement(\"button\", {\n            className: \"cards\",\n            onClick: key => this.choseCard(key),\n            key: value + suit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"\".concat(values[value])));\n        }\n      } // this.shuffle();\n\n\n      return this.deck;\n    };\n\n    this.shuffle = () => {\n      const deck = this.state.deck;\n      let j = deck.length,\n          i;\n\n      while (j) {\n        i = Math.floor(Math.random() * j--);\n        var _ref = [deck[i], deck[j]];\n        deck[j] = _ref[0];\n        deck[i] = _ref[1];\n      } //this.deal();\n\n\n      return this;\n    };\n\n    this.deal = () => {\n      this.setState({\n        player1: this.state.deck.filter((cards, index) => {\n          return index < 13 ? cards : null;\n        })\n      });\n      this.setState({\n        player2: this.state.deck.filter((cards, index) => {\n          return index >= 13 && index < 26 ? cards : null;\n        })\n      });\n      this.setState({\n        player3: this.state.deck.filter((cards, index) => {\n          return index >= 26 && index < 39 ? cards : null;\n        })\n      });\n      this.setState({\n        player4: this.state.deck.filter((cards, index) => {\n          return index >= 39 && index <= 52 ? cards : null;\n        })\n      });\n    };\n\n    this.sort = () => {\n      //let sorted = (a,b) => a.props.children - b.props.children;\n      this.setState({\n        player1: this.state.player1.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player2: this.state.player2.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player3: this.state.player3.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player4: this.state.player4.sort((a, b) => a.key - b.key)\n      });\n    };\n\n    this.choseCard = i => {\n      //let {player1} = this.state\n      //takes i from for loop to determin index\n      i.preventDefault();\n      this.setState(({\n        playCard,\n        player1\n      }) => {\n        for (let i = 0; i < this.state.player1.length; i++) {\n          console.log(i);\n\n          if (playCard.length > 0) {\n            return {\n              playCard: [...playCard, ...player1.slice(index, 1)],\n              player1: [...player1.slice(1, index), ...player1.slice(index, player1.length)]\n            };\n            return index = i;\n          }\n        }\n\n        console.log(index);\n      });\n    };\n\n    this.player2turn = () => {\n      let player2 = this.state.player2;\n      let playCard = this.state.playCard;\n      let filtered = player2.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children === cards.props.children;\n        });\n      });\n      let newPlayer2 = player2.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children !== cards.props.children;\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player2: [...newPlayer2]\n      }); //console.log(filtered)\n    };\n\n    this.player3turn = () => {\n      let player3 = this.state.player3;\n      let playCard = this.state.playCard;\n      let filtered = player3.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children === cards.props.children;\n        });\n      });\n      let newPlayer3 = player3.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children !== cards.props.children;\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player3: [...newPlayer3]\n      });\n    };\n\n    this.player4turn = () => {\n      let player4 = this.state.player4;\n      let playCard = this.state.playCard;\n      let filtered = player4.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children === cards.props.children;\n        });\n      });\n      let newPlayer4 = player4.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children !== cards.props.children;\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player4: [...newPlayer4]\n      });\n    };\n\n    this.playGame = e => {\n      while (this.state.playCard.length < 4) {// this.choseCard\n        // this.player2turn\n        // this.player3turn\n        // this.player4turn\n      }\n    };\n\n    this.endSet = () => {\n      for (let i = 0; i < this.state.playCard.length; i++) {\n        if (this.state.playCard.length < 4) {\n          alert(\"set Over\");\n        }\n      }\n    };\n\n    this.state = {\n      deck: [],\n      player1: [],\n      player2: [],\n      player3: [],\n      player4: [],\n      playCard: []\n    }; //this.startGame();\n\n    this.makeCards();\n    this.shuffle();\n    this.sort();\n    this.deal();\n    this.endSet();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"player1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.player1), React.createElement(\"p\", {\n      id: \"player2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.player2), React.createElement(\"p\", {\n      id: \"player3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.player3), React.createElement(\"p\", {\n      id: \"player4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.player4), React.createElement(\"button\", {\n      onClick: () => this.deal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Deal\"), React.createElement(\"button\", {\n      onClick: () => this.sort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"sort\"), React.createElement(\"button\", {\n      onClick: () => this.choseCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Player 1\"), React.createElement(\"button\", {\n      onClick: () => this.player2turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Player 2\"), React.createElement(\"button\", {\n      onClick: () => this.player3turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Player 3\"), React.createElement(\"button\", {\n      onClick: () => this.player4turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Player 4\"), React.createElement(\"p\", {\n      id: \"playcard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.playCard, \" is the play card\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.playCard.length));\n  }\n\n} // --------------------------------------------------------------\n// this.setState({playCard: this.state.player2.filter((card,index ) => {\n//     return index === this.state.playCard[0].props.children ? card : null\n// })})\n// choseCard = () => {\n//     //takes i from for loop to determin index\n//     this.setState(({playCard, player1}) => {\n//         // let {player1} = this.state\n//     for(let i = 0; i < player1.length; i++){\n//         return i\n//     }\n//         // change `index` to whichever index you want to remove\n//         const index = 0;\n//         const toInsert = player1[index];\n//         player1.splice(index, 1);\n//         playCard.push(toInsert);\n//         return {\n//             playCard: playCard,\n//             player1: player1,\n//         };\n//     });\n// }","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Cards.js"],"names":["React","Component","Cards","constructor","makeCards","suits","values","suit","value","state","deck","push","key","choseCard","shuffle","j","length","i","Math","floor","random","deal","setState","player1","filter","cards","index","player2","player3","player4","sort","a","b","preventDefault","playCard","console","log","slice","player2turn","filtered","some","card","props","children","newPlayer2","player3turn","newPlayer3","player4turn","newPlayer4","playGame","e","endSet","alert","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './card.css'\n//import Deck from './components/Deck'\n\nexport default class Cards extends Component{\n    constructor(){\n        super();\n        this.state = {\n            deck: [],\n            player1: [],\n            player2: [],\n            player3: [],\n            player4: [],\n            playCard: [],\n            \n        }\n        //this.startGame();\n        this.makeCards(); \n        this.shuffle();\n        this.sort();\n        this.deal();\n        this.endSet()\n    }\n\n    makeCards = () => {\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']\n\n        //use regular foor loop and use i, then use i for click event\n        //make variable index and push it into new array with each card\n        for (let suit in suits){\n            for (let value in values) {\n                this.state.deck.push(<button className='cards' onClick={(key) => this.choseCard(key)} key={value+suit}>{`${values[value]}`}</button>);\n                \n            }\n        }\n        // this.shuffle();\n        return this.deck\n    }\n\n    shuffle = () => {\n            const {deck} = this.state;\n            let j = deck.length, i;\n            \n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n                // console.log([deck[i], deck[j]])\n            }\n            //this.deal();\n            return this;\n    }\n    deal = () => {\n            this.setState({ player1: this.state.deck.filter((cards, index) => {\n                    return index < 13 ? cards : null\n                })\n            }) \n            this.setState({ player2: this.state.deck.filter((cards, index) => {\n                    return index >= 13 && index < 26 ? cards : null\n                }) \n            }) \n            this.setState({ player3: this.state.deck.filter((cards, index) => {\n                    return index >= 26 && index < 39 ? cards : null\n                }) \n            }) \n            this.setState({ player4: this.state.deck.filter((cards, index) => {\n                    return index >= 39 && index <= 52 ? cards : null\n                }) \n            }) \n    }\n    \n    sort = () => {\n        \n        //let sorted = (a,b) => a.props.children - b.props.children;\n        this.setState({player1: this.state.player1.sort((a,b) => a.key - b.key)}\n            );\n        this.setState({player2: this.state.player2.sort((a,b) => a.key - b.key)}\n            );\n        this.setState({player3: this.state.player3.sort((a,b) => a.key - b.key)}\n            );\n        this.setState({player4: this.state.player4.sort((a,b) => a.key - b.key)}\n            );\n                };\n            \n    \n            choseCard = (i) => {\n                //let {player1} = this.state\n                //takes i from for loop to determin index\n                i.preventDefault()\n                this.setState(({playCard, player1}) => {\n                    for(let i = 0; i < this.state.player1.length; i++){\n                        console.log(i)\n                        if(playCard.length > 0){\n                            return {\n                                playCard: [...playCard, ...player1.slice(index, 1)],\n                                player1: [...player1.slice(1, index), ...player1.slice(index, player1.length)]\n                                \n                            };\n                        \n                        return index = i\n                    }\n                    }\n                        console.log(index)\n                        \n                    });\n                    \n                }\n                \n           player2turn = () => {\n                let {player2} = this.state\n                let {playCard} = this.state\n            let filtered = player2.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer2 = player2.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player2: [...newPlayer2]\n            })\n            //console.log(filtered)\n\n                }\n           player3turn = () => {\n                let {player3} = this.state\n                let {playCard} = this.state\n            let filtered = player3.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer3 = player3.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player3: [...newPlayer3]\n            })\n            }\n           player4turn = () => {\n                let {player4} = this.state\n                let {playCard} = this.state\n            let filtered = player4.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer4 = player4.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player4: [...newPlayer4]\n            })\n            }\nplayGame = (e) => {\n\n            while(this.state.playCard.length < 4){\n                // this.choseCard\n                // this.player2turn\n                // this.player3turn\n                // this.player4turn\n        }\n    }\n\n    endSet = () => {\n        for(let i =0; i < this.state.playCard.length; i++){\n        if(this.state.playCard.length < 4){\n            alert(\"set Over\")\n        }\n    }\n    }\n    \n    render(){\n            \n            return(\n                <div>\n            \n                \n            \n                <p id='player1'>{this.state.player1}</p>\n                <p id='player2'>{this.state.player2}</p>\n                <p id='player3'>{this.state.player3}</p>\n                <p id='player4'>{this.state.player4}</p>\n                <button onClick={() => this.deal()} >Deal</button>\n                <button onClick={() => this.sort()} >sort</button>\n                {/* <button onClick={() => this.playGame()}>Play</button> */}\n                <button onClick={() => this.choseCard()} >Player 1</button>\n                <button onClick={() => this.player2turn()} >Player 2</button>\n                <button onClick={() => this.player3turn()} >Player 3</button>\n                <button onClick={() => this.player4turn()} >Player 4</button>\n                \n                <p id='playcard'>{this.state.playCard} is the play card</p>\n                <p>{this.state.playCard.length}</p>\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n\n\n\n   // --------------------------------------------------------------\n\n\n\n        // this.setState({playCard: this.state.player2.filter((card,index ) => {\n        //     return index === this.state.playCard[0].props.children ? card : null\n        // })})\n\n         // choseCard = () => {\n            //     //takes i from for loop to determin index\n            //     this.setState(({playCard, player1}) => {\n            //         // let {player1} = this.state\n            //     for(let i = 0; i < player1.length; i++){\n            //         return i\n            //     }\n            //         // change `index` to whichever index you want to remove\n            //         const index = 0;\n            //         const toInsert = player1[index];\n            //         player1.splice(index, 1);\n            //         playCard.push(toInsert);\n                \n            //         return {\n            //             playCard: playCard,\n            //             player1: player1,\n            //         };\n            //     });\n            // }"]},"metadata":{},"sourceType":"module"}