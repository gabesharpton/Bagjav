{"ast":null,"code":"export default class Cards {\n  constructor() {\n    this.deck = [];\n    this.makeCards(); // this.shuffle();\n    // this.player = {\n    //     player1: card,\n    //     player2: card,\n    //     player3: card,\n    //     player4: card\n    // }\n  }\n\n  makeCards() {\n    let deck = [];\n    const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n    const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King'];\n\n    for (let i = 0; i < suits.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        var card = {\n          Value: values[j],\n          Suit: suits[i]\n        };\n        deck.push(card);\n        return deck;\n        console.log(deck);\n      }\n    }\n  }\n\n  shuffle() {} //     shuffle() {\n  //         const {deck} = this;\n  //         let j = deck.length, i;\n  //         console.log(j)\n  //         while(j) {\n  //             i = Math.floor(Math.random() * j--);\n  //             [deck[j], deck[i]] = [deck[i], deck[j]]\n  //             console.log([deck[j], deck[i]])\n  //         }\n  //         return this;\n  //     }\n  //     deal(){\n  //         return this.deck.pop();\n  //     }\n  // }\n  // function deals(){\n  // let cardsInHand = 13;\n  // let player = [\"'player1': cardsInHand, 'player2': cardsInHand, 'player3', 'player4'\"];\n  // for (let player = 0; player < 4; player++){\n  //   console.log(player)\n  //   for(let cardsInHand = 0; cardsInHand < deck1.length; cardsInHand++){\n  //     console.log(deck1[0])\n  //     }\n  // }\n  // for(cardsInHand in player){\n  //     deck1.push(cardsInHand[player])\n  //     console.log(player[0])\n  // }\n  //}\n  // console.log(deck1)\n  // deals()\n\n\n}","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Card.js"],"names":["Cards","constructor","deck","makeCards","suits","values","i","length","j","card","Value","Suit","push","console","log","shuffle"],"mappings":"AACA,eAAe,MAAMA,KAAN,CAAY;AACvBC,EAAAA,WAAW,GAAE;AACT,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,SAAL,GAFS,CAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDA,EAAAA,SAAS,GAAE;AACP,QAAID,IAAI,GAAG,EAAX;AACA,UAAME,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,UAA9B,CAAd;AACA,UAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,IAAhD,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,MAAvE,CAAf;;AAGA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACrC,YAAIC,IAAI,GAAG;AAACC,UAAAA,KAAK,EAAEL,MAAM,CAACG,CAAD,CAAd;AAAmBG,UAAAA,IAAI,EAAEP,KAAK,CAACE,CAAD;AAA9B,SAAX;AACCJ,QAAAA,IAAI,CAACU,IAAL,CAAUH,IAAV;AACA,eAAOP,IAAP;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACH;AACJ;AAEJ;;AACDa,EAAAA,OAAO,GAAE,CAER,CA9BsB,CAgCvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AASI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACQ;AAIR;AACA;;;AA/EmB","sourcesContent":["\nexport default class Cards {\n    constructor(){\n        this.deck = [];\n        this.makeCards();\n        // this.shuffle();\n        // this.player = {\n        //     player1: card,\n        //     player2: card,\n        //     player3: card,\n        //     player4: card\n        // }\n    }\n    makeCards(){\n        let deck = [];\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']\n\n        \n        for (let i = 0; i < suits.length; i++){\n            for (let j = 0; j < values.length; j++) {\n               var card = {Value: values[j], Suit: suits[i]}\n                deck.push(card);\n                return deck;\n                console.log(deck)\n            }\n        }\n\n    }\n    shuffle(){\n        \n    }\n\n    //     shuffle() {\n    //         const {deck} = this;\n    //         let j = deck.length, i;\n    //         console.log(j)\n\n    //         while(j) {\n    //             i = Math.floor(Math.random() * j--);\n    //             [deck[j], deck[i]] = [deck[i], deck[j]]\n    //             console.log([deck[j], deck[i]])\n    //         }\n    //         return this;\n    //     }\n    //     deal(){\n    //         return this.deck.pop();\n    //     }\n\n    // }\n  \n\n    // function deals(){\n\n                \n\n\n\n\n\n\n        // let cardsInHand = 13;\n        // let player = [\"'player1': cardsInHand, 'player2': cardsInHand, 'player3', 'player4'\"];\n\n        // for (let player = 0; player < 4; player++){\n        //   console.log(player)\n        //   for(let cardsInHand = 0; cardsInHand < deck1.length; cardsInHand++){\n        //     console.log(deck1[0])\n        //     }\n        // }\n\n        // for(cardsInHand in player){\n        //     deck1.push(cardsInHand[player])\n        //     console.log(player[0])\n        // }\n                //}\n\n                \n                \n        // console.log(deck1)\n        // deals()\n}"]},"metadata":{},"sourceType":"module"}