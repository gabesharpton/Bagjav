{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/Bagjav/bagjav/src/Cards.js\";\nimport React, { Component } from 'react';\nimport './card.css'; //import Deck from './components/Deck'\n\nexport default class Cards extends Component {\n  constructor() {\n    super();\n\n    this.makeCards = () => {\n      const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n      const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace'];\n\n      for (let suit in suits) {\n        for (let value in values) {\n          this.state.deck.push(React.createElement(\"button\", {\n            className: \"cards\",\n            value: \"\".concat(values[value], \" of \").concat(suits[suit]),\n            onClick: event => this.choseCard(event),\n            key: value + suit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, \" \", \"\".concat(values[value], \" of \").concat(suits[suit]), \" \"));\n        }\n      }\n\n      return this.deck;\n    };\n\n    this.shuffle = () => {\n      const deck = this.state.deck;\n      let j = deck.length,\n          i;\n\n      while (j) {\n        i = Math.floor(Math.random() * j--);\n        var _ref = [deck[i], deck[j]];\n        deck[j] = _ref[0];\n        deck[i] = _ref[1];\n      } //this.deal();\n\n\n      return this;\n    };\n\n    this.deal = () => {\n      if (this.state.player1.length < 1) {\n        this.setState({\n          player1: this.state.deck.filter((cards, index) => {\n            return index < 13 ? cards : null;\n          })\n        });\n        this.setState({\n          player2: this.state.deck.filter((cards, index) => {\n            return index >= 13 && index < 26 ? cards : null;\n          })\n        });\n        this.setState({\n          player3: this.state.deck.filter((cards, index) => {\n            return index >= 26 && index < 39 ? cards : null;\n          })\n        });\n        this.setState({\n          player4: this.state.deck.filter((cards, index) => {\n            return index >= 39 && index <= 52 ? cards : null;\n          })\n        });\n      }\n    };\n\n    this.sort = () => {\n      //let sorted = (a,b) => a.props.children - b.props.children;\n      this.setState({\n        player1: this.state.player1.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player2: this.state.player2.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player3: this.state.player3.sort((a, b) => a.key - b.key)\n      });\n      this.setState({\n        player4: this.state.player4.sort((a, b) => a.key - b.key)\n      });\n    };\n\n    this.player1Turn = () => {\n      player;\n    };\n\n    this.choseCard = event => {\n      //console.log('hello world')\n      //if(event.target && event.target.value){\n      const targetedCard = event.currentTarget;\n      console.log(targetedCard);\n      const eventTarget = event.target.value;\n      this.setState(({\n        player1\n      }) => {\n        let button = React.createElement(\"button\", {\n          className: \"cards\",\n          key: eventTarget,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \" \", eventTarget, \" \");\n        let newpCard = []; //console.log(event.target.value)\n\n        if (eventTarget) {\n          newpCard.push(button);\n          let filtered = player1.filter(cards => {\n            return newpCard.some(card => {\n              return card.value !== cards.props.children[1];\n            });\n          });\n          console.log(newpCard);\n\n          if (this.state.currentPlayer === 1) {\n            return {\n              playCard: newpCard,\n              player1: [...filtered, player1.length],\n              currentPlayer: 2\n            };\n          } else {\n            return alert('You already played this set');\n          }\n        }\n      });\n      this.removeCardInPlay(); //}\n    };\n\n    this.removeCardInPlay = () => {\n      let player1 = this.state.player1;\n\n      if (player1.value === this.state.playCard.value) {\n        this.setState({\n          player1: [...player1.slice(1, player1.length)]\n        });\n      }\n    };\n\n    this.player2turn = () => {\n      let player2 = this.state.player2;\n      let playCard = this.state.playCard;\n      let filtered = player2.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children[1][0] === cards.props.children[1][0];\n        });\n      });\n      let newPlayer2 = player2.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children[1][0] !== cards.props.children[1][0];\n        });\n      });\n\n      if (playCard.length >= 1) {\n        this.setState({\n          playCard: [...playCard, ...filtered],\n          player2: [...newPlayer2]\n        });\n      } else return;\n    };\n\n    this.player3turn = () => {\n      let player3 = this.state.player3;\n      let playCard = this.state.playCard;\n      let filtered = player3.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children[1][0] === cards.props.children[1][0];\n        });\n      });\n      let newPlayer3 = player3.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children[1][0] !== cards.props.children[1][0];\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player3: [...newPlayer3]\n      });\n    };\n\n    this.player4turn = () => {\n      let player4 = this.state.player4;\n      let playCard = this.state.playCard;\n      let filtered = player4.filter(cards => {\n        return playCard.some(card => {\n          return card.props.children[1][0] === cards.props.children[1][0];\n        });\n      });\n      let newPlayer4 = player4.filter(card => {\n        return playCard.some(cards => {\n          return card.props.children[1][0] !== cards.props.children[1][0];\n        });\n      });\n      this.setState({\n        playCard: [...playCard, ...filtered],\n        player4: [...newPlayer4],\n        currentPlayer: 5\n      });\n    };\n\n    this.playGame = () => {\n      if (this.state.playCard.length < 4) {\n        this.choseCard();\n        this.player2turn();\n        this.player3turn();\n        this.player4turn();\n      }\n    };\n\n    this.endSet = () => {\n      setTimeout(() => {\n        if (this.state.playCard.length === 4 || this.state.currentPlayer === 5) {\n          console.log(\"set Over\");\n          this.setState({\n            playCard: [],\n            currentPlayer: 1\n          });\n        } else {\n          console.log('still playing');\n        }\n      }, 500);\n    };\n\n    this.state = {\n      deck: [],\n      player1: [],\n      player2: [],\n      player3: [],\n      player4: [],\n      playCard: [],\n      currentPlayer: 1\n    };\n    this.makeCards();\n    this.shuffle();\n  }\n\n  render() {\n    this.endSet(); //console.log(this.state)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"player1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.player1), React.createElement(\"p\", {\n      id: \"player2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.state.player2), React.createElement(\"p\", {\n      id: \"player3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.player3), React.createElement(\"p\", {\n      id: \"player4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, this.state.player4), React.createElement(\"button\", {\n      onClick: () => this.deal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Deal\"), React.createElement(\"button\", {\n      onClick: () => this.sort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"sort\"), React.createElement(\"button\", {\n      onClick: () => this.player2turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Player 2\"), React.createElement(\"button\", {\n      onClick: () => this.player3turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Player 3\"), React.createElement(\"button\", {\n      onClick: () => this.player4turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Player 4\"), React.createElement(\"p\", {\n      id: \"playCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Card in play:\", this.state.playCard));\n  }\n\n} // --------------------------------------------------------------\n// this.setState({playCard: this.state.player2.filter((card,index ) => {\n//     return index === this.state.playCard[0].props.children ? card : null\n// })})\n//{this.setState({ player1: this.state.player1.filter(card => card.key !== i)})\n//i.preventDefault()\n//takes i from for loop to determin index}\n// for(let i = 0; i < player1.length; i++)\n// {\n// const index = i;\n// console.log(i)\n// choseCard = (i) => {\n//     //let {player1} = this.state\n//     //takes i from for loop to determin index\n//     i.preventDefault()\n//     for(let i = 0; i < this.state.player1.length; i++){\n//     this.setState(({playCard, player1}) => {\n//             console.log(i)\n//             if(playCard.length < 4){\n//                 return {\n//                     playCard: [...playCard, ...player1.slice(i, 1)],\n//                     player1: [...player1.slice(0, i), ...player1.slice(i, player1.length)]\n//                 };\n//             //return index = i\n//         }\n//         else{\n//             return}\n//         }\n//             //console.log(i)\n//     )};\n//     }","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Cards.js"],"names":["React","Component","Cards","constructor","makeCards","suits","values","suit","value","state","deck","push","event","choseCard","shuffle","j","length","i","Math","floor","random","deal","player1","setState","filter","cards","index","player2","player3","player4","sort","a","b","key","player1Turn","player","targetedCard","currentTarget","console","log","eventTarget","target","button","newpCard","filtered","some","card","props","children","currentPlayer","playCard","alert","removeCardInPlay","slice","player2turn","newPlayer2","player3turn","newPlayer3","player4turn","newPlayer4","playGame","endSet","setTimeout","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './card.css'\n//import Deck from './components/Deck'\n\nexport default class Cards extends Component{\n    constructor(){\n        super();\n        this.state = {\n            deck: [],\n            player1: [],\n            player2: [],\n            player3: [],\n            player4: [],\n            playCard: [],\n            currentPlayer: 1   \n        }\n        this.makeCards(); \n        this.shuffle();   \n    }\n    makeCards = () => {\n            const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n            const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']\n\n                for (let suit in suits) {\n                    for (let value in values) {\n                        this.state.deck.push( <button className = 'cards'\n                            value = {\n                                `${values[value]} of ${suits[suit]}`\n                            }\n                            onClick = {\n                                (event) => this.choseCard(event)\n                            }\n                            key = {\n                                value + suit\n                            }> {`${values[value]} of ${suits[suit]}`} </button>);\n\n                    }\n                }\n                    return this.deck\n    };\n\n        shuffle = () => {\n                const {deck} = this.state;\n                let j = deck.length, i;\n                \n\n                while(j) {\n                    i = Math.floor(Math.random() * j--);\n                    [deck[j], deck[i]] = [deck[i], deck[j]]\n                    // console.log([deck[i], deck[j]])\n                }\n                //this.deal();\n                return this;\n        };\n        deal = () => {\n            if(this.state.player1.length < 1){\n                this.setState({ player1: this.state.deck.filter((cards, index) => {\n                        return index < 13 ? cards : null\n                    })\n                }) \n                this.setState({ player2: this.state.deck.filter((cards, index) => {\n                        return index >= 13 && index < 26 ? cards : null\n                    }) \n                }) \n                this.setState({ player3: this.state.deck.filter((cards, index) => {\n                        return index >= 26 && index < 39 ? cards : null\n                    }) \n                }) \n                this.setState({ player4: this.state.deck.filter((cards, index) => {\n                        return index >= 39 && index <= 52 ? cards : null\n                    }) \n                }) \n            }\n        };\n        sort = () => {\n            \n            //let sorted = (a,b) => a.props.children - b.props.children;\n            this.setState({player1: this.state.player1.sort((a,b) => a.key - b.key)}\n                );\n            this.setState({player2: this.state.player2.sort((a,b) => a.key - b.key)}\n                );\n            this.setState({player3: this.state.player3.sort((a,b) => a.key - b.key)}\n                );\n            this.setState({player4: this.state.player4.sort((a,b) => a.key - b.key)}\n                );\n        };\n                \n    player1Turn = () => {\n                       player\n                    };\n    \n    choseCard = (event) => {\n        //console.log('hello world')\n        //if(event.target && event.target.value){\n            const targetedCard = event.currentTarget\n            console.log(targetedCard)\n            const eventTarget = event.target.value\n            this.setState(({\n                player1,\n            }) => {\n                let button = <button className = 'cards' key = {eventTarget}> {eventTarget} </button>;\n                let newpCard = [];\n                //console.log(event.target.value)\n                if(eventTarget){\n                    newpCard.push(button)\n                        let filtered = player1.filter(cards => {\n                            return newpCard.some(card => {\n                                return card.value !== cards.props.children[1]\n                            })\n                        });\n                    console.log(newpCard)\n                    if (this.state.currentPlayer === 1) {\n                        return {\n                            playCard: newpCard,\n                            player1: [...filtered, player1.length],\n                            currentPlayer: 2\n                        }\n                    }else {\n                        return alert('You already played this set')\n                    }\n            }}\n            )\n            this.removeCardInPlay()\n    //}\n    }\n    removeCardInPlay = () => {\n        let {player1} = this.state\n        if(player1.value === this.state.playCard.value){\n            this.setState({\n                player1: [...player1.slice(1, player1.length)]\n            })\n        }\n    }\n    player2turn = () => {\n        let {\n            player2\n        } = this.state\n        let {\n            playCard\n        } = this.state\n        let filtered = player2.filter(cards => {\n            return playCard.some(card => {\n                return card.props.children[1][0] === cards.props.children[1][0]\n            })\n        });\n        let newPlayer2 = player2.filter(card => {\n            return playCard.some(cards => {\n                return card.props.children[1][0] !== cards.props.children[1][0]\n            })\n        })\n        if (playCard.length >= 1) {\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player2: [...newPlayer2]\n            })\n        } else return;\n    };\n    player3turn = () => {\n        let {\n            player3\n        } = this.state\n        let {\n            playCard\n        } = this.state\n        let filtered = player3.filter(cards => {\n            return playCard.some(card => {\n                return card.props.children[1][0] === cards.props.children[1][0]\n            })\n        });\n        let newPlayer3 = player3.filter(card => {\n            return playCard.some(cards => {\n                return card.props.children[1][0] !== cards.props.children[1][0]\n            })\n        })\n        this.setState({\n            playCard: [...playCard, ...filtered],\n            player3: [...newPlayer3]\n        })\n    };\n    player4turn = () => {\n        let {\n            player4\n        } = this.state\n        let {\n            playCard\n        } = this.state\n        let filtered = player4.filter(cards => {\n            return playCard.some(card => {\n                return card.props.children[1][0] === cards.props.children[1][0]\n            })\n        });\n        let newPlayer4 = player4.filter(card => {\n            return playCard.some(cards => {\n                return card.props.children[1][0] !== cards.props.children[1][0]\n            })\n        })\n        this.setState({\n            playCard: [...playCard, ...filtered],\n            player4: [...newPlayer4],\n            currentPlayer: 5\n        })\n    };\n    playGame = () => {\n\n                if(this.state.playCard.length < 4){\n                    this.choseCard()\n                    this.player2turn()\n                    this.player3turn()\n                    this.player4turn()\n            }\n        }\n\n    endSet = () => {\n        setTimeout(()=>{\n        if(this.state.playCard.length === 4|| this.state.currentPlayer === 5){\n            console.log(\"set Over\")\n            this.setState({\n                playCard: [],\n                currentPlayer: 1\n            })}else{\n                console.log('still playing')\n            }\n        },500)\n    }\n    \n    \nrender() {\n    this.endSet();\n    //console.log(this.state)\n    return (<div>\n            \n            {/* <Deck deck={this.props.deck}/> */}\n        \n            <p id='player1'>{this.state.player1}</p>\n            <p id='player2'>{this.state.player2}</p>\n            <p id='player3'>{this.state.player3}</p>\n            <p id='player4'>{this.state.player4}</p>\n            <button onClick={() => this.deal()} >Deal</button>\n            <button onClick={() => this.sort()} >sort</button>\n            <button onClick={() => this.player2turn()} >Player 2</button>\n            <button onClick={() => this.player3turn()} >Player 3</button>\n            <button onClick={() => this.player4turn()} >Player 4</button>\n            \n            <p id='playCard'>Card in play:\n            {this.state.playCard}</p>\n            </div>)\n}\n}\n\n\n\n\n\n\n\n\n   // --------------------------------------------------------------\n\n\n\n        // this.setState({playCard: this.state.player2.filter((card,index ) => {\n        //     return index === this.state.playCard[0].props.children ? card : null\n        // })})\n\n\n                            //{this.setState({ player1: this.state.player1.filter(card => card.key !== i)})\n                //i.preventDefault()\n                //takes i from for loop to determin index}\n                            // for(let i = 0; i < player1.length; i++)\n                    // {\n                            // const index = i;\n                            // console.log(i)\n         \n                            // choseCard = (i) => {\n            //     //let {player1} = this.state\n            //     //takes i from for loop to determin index\n            //     i.preventDefault()\n            //     for(let i = 0; i < this.state.player1.length; i++){\n            //     this.setState(({playCard, player1}) => {\n            //             console.log(i)\n            //             if(playCard.length < 4){\n            //                 return {\n            //                     playCard: [...playCard, ...player1.slice(i, 1)],\n            //                     player1: [...player1.slice(0, i), ...player1.slice(i, player1.length)]\n                                \n            //                 };\n                        \n            //             //return index = i\n            //         }\n            //         else{\n            //             return}\n            //         }\n            //             //console.log(i)\n                        \n            //     )};\n                    \n            //     }"]},"metadata":{},"sourceType":"module"}