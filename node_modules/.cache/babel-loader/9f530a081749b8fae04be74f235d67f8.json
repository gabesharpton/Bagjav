{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/Bagjav/bagjav/src/Cards.js\";\nimport React, { Component } from 'react';\nimport './card.css';\nimport Deck from './components/Deck';\nexport default class Cards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeCards = () => {\n      const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n      const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\n\n      for (let suit in suits) {\n        for (let value in values) {\n          this.state.deck.push(React.createElement(\"span\", {\n            className: \"cards\",\n            key: value + suit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, values[value])); //change span to Deck\n        }\n      } // this.shuffle();\n\n\n      return this.deck;\n    };\n\n    this.shuffle = () => {\n      const deck = this.state.deck;\n      let j = deck.length,\n          i;\n\n      while (j) {\n        i = Math.floor(Math.random() * j--);\n        var _ref = [deck[i], deck[j]];\n        deck[j] = _ref[0];\n        deck[i] = _ref[1];\n      } //this.deal();\n\n\n      return this;\n    };\n\n    this.deal = () => {\n      this.setState({\n        player1: this.state.deck.filter((cards, index) => {\n          return index < 13 ? cards : null;\n        })\n      });\n      this.setState({\n        player2: this.state.deck.filter((cards, index) => {\n          return index >= 13 && index < 26 ? cards : null;\n        })\n      });\n      this.setState({\n        player3: this.state.deck.filter((cards, index) => {\n          return index >= 26 && index < 39 ? cards : null;\n        })\n      });\n      this.setState({\n        player4: this.state.deck.filter((cards, index) => {\n          return index >= 39 && index <= 52 ? cards : null;\n        })\n      });\n    };\n\n    this.playGame = e => {\n      if (this.state.playCard.length < 4) {\n        let choseCard = () => {\n          this.setState(({\n            playCard,\n            player1\n          }) => {\n            return {\n              playCard: [...playCard, ...player1.slice(0, 1)],\n              player1: [...player1.slice(1, player1.length)]\n            };\n          });\n        };\n\n        let player2turn = () => {\n          let player2 = this.state.player2;\n          let playCard = this.state.playCard;\n          let filtered = player2.filter(cards => {\n            return playCard.some(card => {\n              return card.props.children === cards.props.children;\n            });\n          });\n          let newPlayer2 = player2.filter(card => {\n            return playCard.some(cards => {\n              return card.props.children !== cards.props.children;\n            });\n          });\n          this.setState({\n            playCard: [...playCard, ...filtered],\n            player2: [...newPlayer2]\n          }); //console.log(filtered)\n        };\n\n        let player3turn = () => {\n          let player3 = this.state.player3;\n          let playCard = this.state.playCard;\n          let filtered = player3.filter(cards => {\n            return playCard.some(card => {\n              return card.props.children === cards.props.children;\n            });\n          });\n          let newPlayer3 = player3.filter(card => {\n            return playCard.some(cards => {\n              return card.props.children !== cards.props.children;\n            });\n          });\n          this.setState({\n            playCard: [...playCard, ...filtered],\n            player3: [...newPlayer3]\n          });\n        };\n\n        let player4turn = () => {\n          let player4 = this.state.player4;\n          let playCard = this.state.playCard;\n          let filtered = player4.filter(cards => {\n            return playCard.some(card => {\n              return card.props.children === cards.props.children;\n            });\n          });\n          let newPlayer4 = player4.filter(card => {\n            return playCard.some(cards => {\n              return card.props.children !== cards.props.children;\n            });\n          });\n          this.setState({\n            playCard: [...playCard, ...filtered],\n            player4: [...newPlayer4]\n          });\n        };\n      }\n    };\n\n    this.state = {\n      deck: [],\n      player1: [],\n      player2: [],\n      player3: [],\n      player4: [],\n      playCard: []\n    }; //this.startGame();\n\n    this.makeCards();\n    this.shuffle(); // this.checkCard();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Deck, {\n      deck: this.state.deck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"player1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.player1), React.createElement(\"p\", {\n      id: \"player2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.player2), React.createElement(\"p\", {\n      id: \"player3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.player3), React.createElement(\"p\", {\n      id: \"player4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.player4), React.createElement(\"button\", {\n      onClick: () => this.deal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Deal\"), React.createElement(\"button\", {\n      onClick: () => this.playGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Player 1\"), React.createElement(\"button\", {\n      onClick: () => this.player2turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Player 2\"), React.createElement(\"button\", {\n      onClick: () => this.player3turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Player 3\"), React.createElement(\"button\", {\n      onClick: () => this.player4turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Player 4\"), React.createElement(\"p\", {\n      id: \"playcard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.playCard, \" is the play card\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.playCard.length));\n  }\n\n} // --------------------------------------------------------------\n// this.setState({playCard: this.state.player2.filter((card,index ) => {\n//     return index === this.state.playCard[0].props.children ? card : null\n// })})","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Cards.js"],"names":["React","Component","Deck","Cards","constructor","props","makeCards","suits","values","suit","value","state","deck","push","shuffle","j","length","i","Math","floor","random","deal","setState","player1","filter","cards","index","player2","player3","player4","playGame","e","playCard","choseCard","slice","player2turn","filtered","some","card","children","newPlayer2","player3turn","newPlayer3","player4turn","newPlayer4","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './card.css'\nimport Deck from './components/Deck'\n\nexport default class Cards extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            deck: [],\n            player1: [],\n            player2: [],\n            player3: [],\n            player4: [],\n            playCard: [],\n            \n        }\n        //this.startGame();\n        this.makeCards(); \n        this.shuffle();\n        \n        // this.checkCard();\n    }\n\n    makeCards = () => {\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K']\n\n        \n        for (let suit in suits){\n            for (let value in values) {\n                this.state.deck.push(<span className='cards' key={value+suit}>{values[value]}</span>);\n                //change span to Deck\n            }\n        }\n        // this.shuffle();\n        return this.deck\n    }\n\n    shuffle = () => {\n            const {deck} = this.state;\n            let j = deck.length, i;\n            \n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n                // console.log([deck[i], deck[j]])\n            }\n            //this.deal();\n            return this;\n    }\n    deal = () => {\n            this.setState({ player1: this.state.deck.filter((cards, index) => {\n                \n                    return index < 13 ? cards : null\n                }) \n            }) \n            this.setState({ player2: this.state.deck.filter((cards, index) => {\n                    return index >= 13 && index < 26 ? cards : null\n                }) \n            }) \n            this.setState({ player3: this.state.deck.filter((cards, index) => {\n                    return index >= 26 && index < 39 ? cards : null\n                }) \n            }) \n            this.setState({ player4: this.state.deck.filter((cards, index) => {\n                    return index >= 39 && index <= 52 ? cards : null\n                }) \n            }) \n    }\n    \n\n    playGame = (e) => {\n\n            if(this.state.playCard.length < 4){\n    \n            let choseCard = () => {\n                this.setState(({playCard, player1}) => {\n                    return {\n                        playCard: [...playCard, ...player1.slice(0, 1)],\n                        player1: [...player1.slice(1, player1.length)]\n                    \n                    };\n                });\n                \n            }\n           let player2turn = () => {\n                let {player2} = this.state\n                let {playCard} = this.state\n            let filtered = player2.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer2 = player2.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player2: [...newPlayer2]\n            })\n            //console.log(filtered)\n\n                }\n           let player3turn = () => {\n                let {player3} = this.state\n                let {playCard} = this.state\n            let filtered = player3.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer3 = player3.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player3: [...newPlayer3]\n            })\n            }\n           let player4turn = () => {\n                let {player4} = this.state\n                let {playCard} = this.state\n            let filtered = player4.filter(cards=> {\n                return playCard.some(card=> {\n                    return card.props.children === cards.props.children\n                })\n            });\n            let newPlayer4 = player4.filter(card => {\n                return playCard.some(cards=> {\n                return card.props.children !== cards.props.children})})\n            this.setState({\n                playCard: [...playCard, ...filtered],\n                player4: [...newPlayer4]\n            })\n            }\n\n        }\n    }\n    render(){\n            \n            return(\n                <div>\n            \n                <Deck deck={this.state.deck} />\n            \n                <p id='player1'>{this.state.player1}</p>\n                <p id='player2'>{this.state.player2}</p>\n                <p id='player3'>{this.state.player3}</p>\n                <p id='player4'>{this.state.player4}</p>\n                <button onClick={() => this.deal()} >Deal</button>\n                <button onClick={() => this.playGame()} >Player 1</button>\n                <button onClick={() => this.player2turn()} >Player 2</button>\n                <button onClick={() => this.player3turn()} >Player 3</button>\n                <button onClick={() => this.player4turn()} >Player 4</button>\n                \n                <p id='playcard'>{this.state.playCard} is the play card</p>\n                <p>{this.state.playCard.length}</p>\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n\n\n\n   // --------------------------------------------------------------\n\n\n\n        // this.setState({playCard: this.state.player2.filter((card,index ) => {\n        //     return index === this.state.playCard[0].props.children ? card : null\n        // })})"]},"metadata":{},"sourceType":"module"}