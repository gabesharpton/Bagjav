{"ast":null,"code":"export default class Cards {\n  constructor() {\n    this.deck = [];\n    this.reset();\n    this.shuffle();\n  }\n\n  reset() {\n    this.deck = [];\n    const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n    const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King'];\n\n    for (let suit in suits) {\n      for (let value in values) {\n        this.deck.push(\"\".concat(values[value], \" of \").concat(suits[suit]));\n      }\n    }\n  }\n\n  shuffle() {\n    const deck = this.deck;\n    let j = deck.length,\n        i;\n\n    while (j) {\n      i = Math.floor(Math.random() * j--);\n      var _ref = [deck[i], deck[j]];\n      deck[j] = _ref[0];\n      deck[i] = _ref[1];\n    }\n\n    return this;\n  }\n\n  deal() {\n    return this.deck.pop();\n  }\n\n}\nconst deck1 = new Cards();\n\nfunction deals() {\n  for (let p = 1; p < 5; p++) {\n    console.log(p);\n\n    for (let c = 0; c < deck1.length; c++) {\n      console.log(deck1[p + c]);\n    }\n  }\n}\n\nconsole.log(deck1[c]);\ndeals();","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Card.js"],"names":["Cards","constructor","deck","reset","shuffle","suits","values","suit","value","push","j","length","i","Math","floor","random","deal","pop","deck1","deals","p","console","log","c"],"mappings":"AACA,eAAe,MAAMA,KAAN,CAAY;AACvBC,EAAAA,WAAW,GAAE;AACT,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,KAAL;AACA,SAAKC,OAAL;AACH;;AACDD,EAAAA,KAAK,GAAE;AACH,SAAKD,IAAL,GAAY,EAAZ;AACA,UAAMG,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,UAA9B,CAAd;AACA,UAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,IAAhD,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,MAAvE,CAAf;;AAEA,SAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAuB;AACnB,WAAK,IAAIG,KAAT,IAAkBF,MAAlB,EAA0B;AACtB,aAAKJ,IAAL,CAAUO,IAAV,WAAkBH,MAAM,CAACE,KAAD,CAAxB,iBAAsCH,KAAK,CAACE,IAAD,CAA3C;AACH;AACJ;AACJ;;AAEGH,EAAAA,OAAO,GAAG;AAAA,UACCF,IADD,GACS,IADT,CACCA,IADD;AAEN,QAAIQ,CAAC,GAAGR,IAAI,CAACS,MAAb;AAAA,QAAqBC,CAArB;;AAEA,WAAMF,CAAN,EAAS;AACLE,MAAAA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAAC,EAA5B,CAAJ;AADK,iBAEgB,CAACR,IAAI,CAACU,CAAD,CAAL,EAAUV,IAAI,CAACQ,CAAD,CAAd,CAFhB;AAEJR,MAAAA,IAAI,CAACQ,CAAD,CAFA;AAEKR,MAAAA,IAAI,CAACU,CAAD,CAFT;AAGR;;AACD,WAAO,IAAP;AACH;;AACDI,EAAAA,IAAI,GAAE;AACF,WAAO,KAAKd,IAAL,CAAUe,GAAV,EAAP;AACH;;AA9BkB;AAkCvB,MAAMC,KAAK,GAAG,IAAIlB,KAAJ,EAAd;;AACA,SAASmB,KAAT,GAAgB;AACZ,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACE,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAACP,MAAzB,EAAiCY,CAAC,EAAlC,EAAqC;AACnCF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,CAAC,GAAGG,CAAL,CAAjB;AACD;AACJ;AACQ;;AACTF,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,CAAD,CAAjB;AACAJ,KAAK","sourcesContent":["\nexport default class Cards {\n    constructor(){\n        this.deck = [];\n        this.reset();\n        this.shuffle();\n    }\n    reset(){\n        this.deck = [];\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']\n\n        for (let suit in suits){\n            for (let value in values) {\n                this.deck.push(`${values[value]} of ${suits[suit]}`);\n            }\n        }\n    }\n\n        shuffle() {\n            const {deck} = this;\n            let j = deck.length, i;\n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n            }\n            return this;\n        }\n        deal(){\n            return this.deck.pop();\n        }\n\n    }\n\n    const deck1 = new Cards();\n    function deals(){\n        for (let p = 1; p < 5; p++){\n          console.log(p)\n            for(let c = 0; c < deck1.length; c++){\n              console.log(deck1[p + c])\n            }\n        }\n                }\n        console.log(deck1[c])\n        deals()"]},"metadata":{},"sourceType":"module"}