{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/Bagjav/bagjav/src/Card.js\";\nimport React, { Component } from 'react';\nimport './card.css'; //import {_} from 'lodash'\n\nexport default class Cards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeCards = () => {\n      const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n      const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\n\n      for (let suit in suits) {\n        for (let value in values) {\n          this.state.deck.push(React.createElement(\"span\", {\n            className: \"cards\",\n            key: value + suit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, values[value]));\n        }\n      } // this.shuffle();\n\n\n      return this.deck;\n    };\n\n    this.shuffle = () => {\n      const deck = this.state.deck;\n      let j = deck.length,\n          i;\n\n      while (j) {\n        i = Math.floor(Math.random() * j--);\n        var _ref = [deck[i], deck[j]];\n        deck[j] = _ref[0];\n        deck[i] = _ref[1];\n      } //this.deal();\n\n\n      return this;\n    };\n\n    this.deal = () => {\n      this.setState({\n        player1: this.state.deck.filter((cards, index) => {\n          return index < 13 ? cards : null;\n        })\n      });\n      this.setState({\n        player2: this.state.deck.filter((cards, index) => {\n          return index >= 13 && index < 26 ? cards : null;\n        })\n      });\n      this.setState({\n        player3: this.state.deck.filter((cards, index) => {\n          return index >= 26 && index < 39 ? cards : null;\n        })\n      });\n      this.setState({\n        player4: this.state.deck.filter((cards, index) => {\n          return index >= 39 && index <= 52 ? cards : null;\n        })\n      });\n    };\n\n    this.player2turn = props => {\n      // let player2 = [...this.state.player2];\n      let player2 = this.state.player2;\n      let playCard = this.state.playCard;\n\n      for (let item = 0; item < player2.length; item++) {\n        console.log(playCard);\n        console.log(player2);\n        let items = [...this.state.player2[item].props.children];\n        return items;\n      }\n\n      console.log(items);\n\n      for (let i = 0; i < player2.length; i++) {\n        // for(let c = 0; c < playCard.length; c++){\n        let player2child = [...this.state.player2[i].props.children]; // console.log(player2child)\n\n        let playCardChild = [...this.state.playCard['0'].props.children]; // console.log(playCardChild)\n\n        if (player2child === playCardChild) {\n          console.log(player2child);\n          console.log(playCardChild);\n          this.setState(({\n            playCard,\n            player2\n          }) => {\n            return {\n              playCard: [...playCard, ...player2.slice(0, 1)],\n              player2: [...player2.slice(1, player2.length)]\n            };\n          });\n          return this.setState(({\n            playCard,\n            player2\n          }) => {\n            return {\n              playCard: [...playCard, ...player2.slice(0, 1)],\n              player2: [...player2.slice(1, player2.length)]\n            };\n          });\n        }\n      }\n    };\n\n    this.player3turn = () => {\n      this.setState(({\n        playCard,\n        player3\n      }) => {\n        return {\n          playCard: [...playCard, ...player3.slice(0, 1)],\n          player3: [...player3.slice(1, player3.length)]\n        };\n      });\n    };\n\n    this.player4turn = () => {\n      this.setState(({\n        playCard,\n        player4\n      }) => {\n        return {\n          playCard: [...playCard, ...player4.slice(0, 1)],\n          player4: [...player4.slice(1, player4.length)]\n        };\n      });\n    };\n\n    this.state = {\n      deck: [],\n      player1: [],\n      player2: [],\n      player3: [],\n      player4: [],\n      playCard: []\n    }; //this.startGame();\n\n    this.makeCards();\n    this.shuffle(); // this.checkCard();\n  }\n\n  choseCard() {\n    this.setState(({\n      playCard,\n      player1\n    }) => {\n      return {\n        playCard: [...playCard, ...player1.slice(0, 1)],\n        player1: [...player1.slice(1, player1.length)]\n      };\n    });\n  }\n\n  render() {\n    // console.log( this.state.player1 )\n    // console.log( this.state.player2 )\n    // console.log( this.state.player3 )\n    // console.log( this.state.player4 )\n    // console.log(this.state.playCard)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"player1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.player1), React.createElement(\"p\", {\n      id: \"player2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.player2), React.createElement(\"p\", {\n      id: \"player3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.player3), React.createElement(\"p\", {\n      id: \"player4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.player4), React.createElement(\"button\", {\n      onClick: () => this.deal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Deal\"), React.createElement(\"button\", {\n      onClick: () => this.choseCard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Player 1\"), React.createElement(\"button\", {\n      onClick: () => this.player2turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Player 2\"), React.createElement(\"button\", {\n      onClick: () => this.player3turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Player 3\"), React.createElement(\"button\", {\n      onClick: () => this.player4turn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Player 4\"), React.createElement(\"p\", {\n      id: \"playcard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.playCard, \" is the play card\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.playCard.length));\n  }\n\n} // --------------------------------------------------------------\n// this.setState({playCard: this.state.player2.filter((card,index ) => {\n//     return index === this.state.playCard[0].props.children ? card : null\n// })})","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Card.js"],"names":["React","Component","Cards","constructor","props","makeCards","suits","values","suit","value","state","deck","push","shuffle","j","length","i","Math","floor","random","deal","setState","player1","filter","cards","index","player2","player3","player4","player2turn","playCard","item","console","log","items","children","player2child","playCardChild","slice","player3turn","player4turn","choseCard","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './card.css'\n//import {_} from 'lodash'\n\nexport default class Cards extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            deck: [],\n            player1: [],\n            player2: [],\n            player3: [],\n            player4: [],\n            playCard: [],\n            \n        }\n        //this.startGame();\n        this.makeCards(); \n        this.shuffle();\n        \n        // this.checkCard();\n    }\n\n    makeCards = () => {\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K']\n\n        \n        for (let suit in suits){\n            for (let value in values) {\n                this.state.deck.push(<span className='cards' key={value+suit}>{values[value]}</span>);\n            }\n        }\n        // this.shuffle();\n        return this.deck\n    }\n\n    shuffle = () => {\n            const {deck} = this.state;\n            let j = deck.length, i;\n            \n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n                // console.log([deck[i], deck[j]])\n            }\n            //this.deal();\n            return this;\n    }\n    deal = () => {\n            this.setState({ player1: this.state.deck.filter((cards, index) => {\n                \n                    return index < 13 ? cards : null\n                }) \n            }) \n            this.setState({ player2: this.state.deck.filter((cards, index) => {\n                    return index >= 13 && index < 26 ? cards : null\n                }) \n            }) \n            this.setState({ player3: this.state.deck.filter((cards, index) => {\n                    return index >= 26 && index < 39 ? cards : null\n                }) \n            }) \n            this.setState({ player4: this.state.deck.filter((cards, index) => {\n                    return index >= 39 && index <= 52 ? cards : null\n                }) \n            }) \n    }\n    \n\nchoseCard(){\n    this.setState(({playCard, player1}) => {\n        return {\n            playCard: [...playCard, ...player1.slice(0, 1)],\n            player1: [...player1.slice(1, player1.length)]\n        \n        };\n      });\n    \n}\nplayer2turn = (props) => {\n    // let player2 = [...this.state.player2];\n\n    let {player2} = this.state\n    let {playCard} = this.state\n    for(let item = 0; item < player2.length; item++){\n        console.log(playCard)\n        console.log(player2)\n        let items = [...this.state.player2[item].props.children]\n\n        return items;\n        }\n\nconsole.log(items)\n\n        for(let i = 0; i < player2.length; i++){\n            // for(let c = 0; c < playCard.length; c++){\n            let player2child = [...this.state.player2[i].props.children]\n                // console.log(player2child)\n            let playCardChild = [...this.state.playCard['0'].props.children]\n                // console.log(playCardChild)\n                if(player2child === playCardChild){\n                    console.log(player2child)\n                    console.log(playCardChild)\n                    this.setState(({playCard, player2}) => {\n                        return {\n                            playCard: [...playCard, ...player2.slice(0, 1)],\n                            player2: [...player2.slice(1, player2.length)]\n                        \n                        };\n                      });\n                   return this.setState(({playCard, player2}) => {\n                        return {\n                            playCard: [...playCard, ...player2.slice(0, 1)],\n                            player2: [...player2.slice(1, player2.length)]\n                        \n                        };\n                      });\n                }\n\n}\n        \n}\nplayer3turn = () => {\n    this.setState(({playCard, player3}) => {\n        return {\n            playCard: [...playCard, ...player3.slice(0, 1)],\n            player3: [...player3.slice(1, player3.length)]\n        \n        };\n      });\n}\nplayer4turn = () => {\n    this.setState(({playCard, player4}) => {\n        return {\n            playCard: [...playCard, ...player4.slice(0, 1)],\n            player4: [...player4.slice(1, player4.length)]\n        \n        };\n      });\n}\n\n\n\n        render(){\n            // console.log( this.state.player1 )\n            // console.log( this.state.player2 )\n            // console.log( this.state.player3 )\n            // console.log( this.state.player4 )\n            // console.log(this.state.playCard)\n            \n            return(\n                <div>\n            \n                <p id='player1'>{this.state.player1}</p>\n                <p id='player2'>{this.state.player2}</p>\n                <p id='player3'>{this.state.player3}</p>\n                <p id='player4'>{this.state.player4}</p>\n                <button onClick={() => this.deal()} >Deal</button>\n                <button onClick={() => this.choseCard()} >Player 1</button>\n                <button onClick={() => this.player2turn()} >Player 2</button>\n                <button onClick={() => this.player3turn()} >Player 3</button>\n                <button onClick={() => this.player4turn()} >Player 4</button>\n                \n                <p id='playcard'>{this.state.playCard} is the play card</p>\n                <p>{this.state.playCard.length}</p>\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n\n\n\n   // --------------------------------------------------------------\n\n\n\n        // this.setState({playCard: this.state.player2.filter((card,index ) => {\n        //     return index === this.state.playCard[0].props.children ? card : null\n        // })})"]},"metadata":{},"sourceType":"module"}