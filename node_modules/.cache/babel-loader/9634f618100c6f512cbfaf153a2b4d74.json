{"ast":null,"code":"export default class Cards {\n  constructor() {\n    this.deck = [];\n    this.reset();\n    this.shuffle();\n    this.player = {\n      player1: card,\n      player2: card,\n      player3: card,\n      player4: card\n    };\n  }\n\n  reset() {\n    this.deck = [];\n    const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds'];\n    const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King'];\n\n    for (let suit in suits) {\n      for (let value in values) {\n        this.deck.push(\"\".concat(values[value], \" of \").concat(suits[suit]));\n      }\n    }\n  }\n\n  shuffle() {\n    const deck = this.deck;\n    let j = deck.length,\n        i;\n    console.log(j);\n\n    while (j) {\n      i = Math.floor(Math.random() * j--);\n      var _ref = [deck[i], deck[j]];\n      deck[j] = _ref[0];\n      deck[i] = _ref[1];\n    }\n\n    return this;\n  } // deal(){\n  //     return this.deck.pop();\n  // }\n\n\n} // function deals(){\n// let cardsInHand = 13;\n// let player = [\"'player1': cardsInHand, 'player2': cardsInHand, 'player3', 'player4'\"];\n// for (let player = 0; player < 4; player++){\n//   console.log(player)\n//   for(let cardsInHand = 0; cardsInHand < deck1.length; cardsInHand++){\n//     console.log(deck1[0])\n//     }\n// }\n// for(cardsInHand in player){\n//     deck1.push(cardsInHand[player])\n//     console.log(player[0])\n// }\n//}\n// console.log(deck1)\n// deals()","map":{"version":3,"sources":["/Users/3bag/Code/Bagjav/bagjav/src/Card.js"],"names":["Cards","constructor","deck","reset","shuffle","player","player1","card","player2","player3","player4","suits","values","suit","value","push","j","length","i","console","log","Math","floor","random"],"mappings":"AACA,eAAe,MAAMA,KAAN,CAAY;AACvBC,EAAAA,WAAW,GAAE;AACT,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,KAAL;AACA,SAAKC,OAAL;AACA,SAAKC,MAAL,GAAc;AACVC,MAAAA,OAAO,EAAEC,IADC;AAEVC,MAAAA,OAAO,EAAED,IAFC;AAGVE,MAAAA,OAAO,EAAEF,IAHC;AAIVG,MAAAA,OAAO,EAAEH;AAJC,KAAd;AAMH;;AACDJ,EAAAA,KAAK,GAAE;AACH,SAAKD,IAAL,GAAY,EAAZ;AACA,UAAMS,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,UAA9B,CAAd;AACA,UAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,IAAhD,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,MAAvE,CAAf;;AAEA,SAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAuB;AACnB,WAAK,IAAIG,KAAT,IAAkBF,MAAlB,EAA0B;AACtB,aAAKV,IAAL,CAAUa,IAAV,WAAkBH,MAAM,CAACE,KAAD,CAAxB,iBAAsCH,KAAK,CAACE,IAAD,CAA3C;AACH;AACJ;AACJ;;AAEGT,EAAAA,OAAO,GAAG;AAAA,UACCF,IADD,GACS,IADT,CACCA,IADD;AAEN,QAAIc,CAAC,GAAGd,IAAI,CAACe,MAAb;AAAA,QAAqBC,CAArB;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;;AAEY,WAAMA,CAAN,EAAS;AACLE,MAAAA,CAAC,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,CAAC,EAA5B,CAAJ;AADK,iBAEgB,CAACd,IAAI,CAACgB,CAAD,CAAL,EAAUhB,IAAI,CAACc,CAAD,CAAd,CAFhB;AAEJd,MAAAA,IAAI,CAACc,CAAD,CAFA;AAEKd,MAAAA,IAAI,CAACgB,CAAD,CAFT;AAIR;;AACD,WAAO,IAAP;AACH,GAnCkB,CAoCnB;AACA;AACA;;;AAtCmB,C,CA2CvB;AASI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACQ;AAIR;AACA","sourcesContent":["\nexport default class Cards {\n    constructor(){\n        this.deck = [];\n        this.reset();\n        this.shuffle();\n        this.player = {\n            player1: card,\n            player2: card,\n            player3: card,\n            player4: card\n        }\n    }\n    reset(){\n        this.deck = [];\n        const suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']\n        const values = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']\n\n        for (let suit in suits){\n            for (let value in values) {\n                this.deck.push(`${values[value]} of ${suits[suit]}`);\n            }\n        }\n    }\n\n        shuffle() {\n            const {deck} = this;\n            let j = deck.length, i;\nconsole.log(j)\n\n            while(j) {\n                i = Math.floor(Math.random() * j--);\n                [deck[j], deck[i]] = [deck[i], deck[j]]\n                // console.log(j)\n            }\n            return this;\n        }\n        // deal(){\n        //     return this.deck.pop();\n        // }\n\n    }\n  \n\n    // function deals(){\n\n                \n\n\n\n\n\n\n        // let cardsInHand = 13;\n        // let player = [\"'player1': cardsInHand, 'player2': cardsInHand, 'player3', 'player4'\"];\n\n        // for (let player = 0; player < 4; player++){\n        //   console.log(player)\n        //   for(let cardsInHand = 0; cardsInHand < deck1.length; cardsInHand++){\n        //     console.log(deck1[0])\n        //     }\n        // }\n\n        // for(cardsInHand in player){\n        //     deck1.push(cardsInHand[player])\n        //     console.log(player[0])\n        // }\n                //}\n\n                \n                \n        // console.log(deck1)\n        // deals()"]},"metadata":{},"sourceType":"module"}